name: Flutter CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allows manual triggering

jobs:
  analyze_and_test:
    name: Analyze and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.0" # Match your environment.sdk from pubspec.yaml
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed lib test

      - name: Analyze project source
        run: flutter analyze --no-fatal-infos

      - name: Run unit tests
        run: |
          flutter test test/unit/format_utils_test.dart
          flutter test test/unit/date_utils_test.dart
          flutter test test/unit/app_utils_test.dart

  build_android:
    name: Build Android APK
    needs: analyze_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.0"
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Configure Keystore
        run: |
          echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties
          echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
        if: github.ref == 'refs/heads/main'

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk

  build_ios:
    name: Build iOS App
    needs: analyze_and_test
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.0"
          channel: "stable"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS
        run: flutter build ios --release --no-codesign

  deploy_to_firebase:
    name: Deploy to Firebase App Distribution
    needs: build_android
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/

      - name: Setup Firebase CLI
        uses: firebase/firebase-tools@v9
        with:
          token: ${{ secrets.FIREBASE_TOKEN }}

      - name: Upload to Firebase App Distribution
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app ${{ secrets.FIREBASE_ANDROID_APP_ID }} \
            --groups "testers" \
            --release-notes "Automated build from ${{ github.ref_name }} branch"

  deploy_to_play_store:
    name: Deploy to Google Play Store
    needs: build_android
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.0"
          channel: "stable"
          cache: true

      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          packageName: com.example.farmer_app
          releaseFiles: build/app/outputs/flutter-apk/app-release.apk
          track: internal
          status: completed
